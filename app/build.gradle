apply plugin: 'com.android.application'
apply plugin: 'android-apt' //  // butterknife: "8.4.0",使用
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
     /*  5535 方法数*/
        multiDexEnabled = true
        //http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0226/3996.html
        //Android Studio 1.4 中介绍了一种通过 在编译时生成png 的办法对vector drawable提供了有限的支持。
        // 为了禁用这个功能（节省支持库的空间，真正受益于新的库），
        // 你需要在 build.gradle文件里添加vectorDrawables.useSupportLibrary = true ：
        vectorDrawables.useSupportLibrary = true
  /*      testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"*/
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
/*    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })*/

    // base
    compile rootProject.ext.dependencies["appcompat-v7"]

    //ui
    compile rootProject.ext.dependencies["design"] // android design
    compile rootProject.ext.dependencies["constraint-layout"] // 约束性布局
    compile rootProject.ext.dependencies["iconics-core"] // ui 库各种icon
    compile rootProject.ext.dependencies["roundedimageview"] // 圆角库

    //di
    compile rootProject.ext.dependencies["butterknife"] // findbyid 注解
    apt rootProject.ext.dependencies["butterknife-compiler"]
    provided rootProject.ext.dependencies["annotation"] //
    compile rootProject.ext.dependencies["annotations"] //

    compile rootProject.ext.dependencies["dagger"]
    compile rootProject.ext.dependencies["dagger-compiler"]


   //other
    compile rootProject.ext.dependencies["fragmentation"] // fragment/activity 管理


    // rx
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]

    // imageloader
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-transformations"]


}
